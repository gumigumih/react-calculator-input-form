name: Deploy to GitHub Pages and npm

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy docs to GitHub Pages
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies (root)
        run: npm ci

      - name: Lint (root)
        run: |
          if npm run | grep -q " lint"; then
            npm run lint
          else
            echo "No lint script. Skipping."
          fi

      - name: Install dependencies (docs)
        run: |
          cd docs
          npm ci

      - name: Build docs
        run: |
          cd docs
          npm run build

      - name: Verify docs artifact exists and is not empty
        run: |
          if [ ! -d docs/dist ] || [ -z "$(ls -A docs/dist || true)" ]; then
            echo "::error::docs/dist is missing or empty. Build might have failed."
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs/dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Publish to npm
  publish-npm:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.repository_owner == 'gumigumih'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Validate NPM token is present
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "::error::NPM_TOKEN is not set in repository secrets"
            exit 1
          fi

      - name: Install dependencies
        run: npm ci

      - name: Lint (root)
        run: |
          if npm run | grep -q " lint"; then
            npm run lint
          else
            echo "No lint script. Skipping."
          fi

      - name: Build package
        run: npm run build

      - name: Verify dist exists and is not empty
        run: |
          if [ ! -d dist ] || [ -z "$(ls -A dist || true)" ]; then
            echo "::error::dist is missing or empty. Build might have failed."
            exit 1
          fi

      - name: Verify tag duplication (v{version})
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git fetch --tags --quiet
          if git rev-parse -q --verify "refs/tags/v$VERSION" >/dev/null; then
            echo "::error::Git tag v$VERSION already exists. Please bump version."
            exit 1
          fi

      - name: Verify version bump
        id: verify-version
        shell: bash
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          LOCAL_VERSION=$(node -p "require('./package.json').version")
          set +e
          PUBLISHED_VERSION=$(npm view "$PACKAGE_NAME" version 2>/dev/null)
          STATUS=$?
          set -e
          if [ $STATUS -ne 0 ] || [ -z "$PUBLISHED_VERSION" ]; then
            echo "No published version found for $PACKAGE_NAME. Proceeding to first publish of v$LOCAL_VERSION."
            exit 0
          fi
          echo "Local version:     $LOCAL_VERSION"
          echo "Published version: $PUBLISHED_VERSION"
          if [ "$LOCAL_VERSION" = "$PUBLISHED_VERSION" ]; then
            echo "::error::Version $LOCAL_VERSION is already published. Please bump the version in package.json before publishing."
            exit 1
          fi
          echo "Version bump detected. Proceeding to publish."

      - name: Verify package contents with npm pack --dry-run
        run: npm pack --dry-run

      - name: Publish to npm
        if: ${{ success() }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Create GitHub release
  create-release:
    runs-on: ubuntu-latest
    needs: [build-and-deploy, publish-npm]
    if: needs.publish-npm.result == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get package version
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          release_name: Release v${{ steps.package-version.outputs.version }}
          body: |
            ## What's Changed

            - Automated release from main branch
            - Documentation updated on GitHub Pages
            - Package published to npm

            ## Installation

            ```bash
            npm install @gumigumih/react-calculator-input-form
            ```

            ## Documentation

            Visit: https://gumigumih.github.io/react-calculator-input-form/
          draft: false
          prerelease: false
